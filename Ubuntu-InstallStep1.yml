#https://blog.risingstack.com/getting-started-with-ansible-infrastructure-automation/
- hosts: superpi
  become: 'yes'
  vars:
    - name: "ubuntu"
      password: "ubuntu"
  tasks:
    - name: Change password for ubuntu user
      user:
        name: '"{{ item.name }}"'
        password: '"{{ item.password | password_hash('sha512') }}"'
    - name: ADD ALL SSH KEYS
    #https://www.andrehotzler.de/en/blog/technology/79-distribute-ssh-keys-elegantly-with-ansible.html
    #https://webworxshop.com/automating-my-infrastructure-with-ansible-and-gitlab-ci-part-3-ssh-keys-and-dotfiles/
    #https://www.middlewareinventory.com/blog/ansible-ssh-key-exchange/
    - name: Generate SSH keys on superpi1
      when: "'superpi1' in inventory_hostname"
      command: ssh-keygen -q -t rsa -f /home/ubuntu/.ssh/id_rsa -C "" -N ""
      args:
        creates: /home/ubuntu/.ssh/id_rsa
    - name: Fetch the public key from superpi1
      when: "'superpi1' in inventory_hostname"
      fetch:
        src: "/home/ubuntu/.ssh/id_rsa.pub"
        dest: "buffer/superpi1-id_rsa.pub"
        flat: yes
    - name: Distribute fetched key to other superpis
      when: inventory_hostname in groups['superpiworkers']
      authorized_key:
        user: ubuntu
        state: present
        key: "{{ lookup('file', 'buffer/superpi1-id_rsa.pub') }}"
    - name: Disable root SSH access
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#PermitRootLogin prohibit-password'
        line: PermitRootLogin no
    - name: Disable SSH password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication yes'
        line: PasswordAuthentication no
    - name: Update system
      apt:
        upgrade: yes
        update_cache: yes
        autoclean: yes
        autoremove: yes
    - name: Reboot server
      reboot:
        msg: "Ansible Reboot"
        connect_timeout: 5
        reboot_timeout: 120
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
